{"version":3,"file":"index-B3mVKm4o.js","sources":["../../../../pages/index.vue"],"sourcesContent":["<script setup lang=\"ts\">\n\timport { z } from 'zod';\n\timport { useQuery } from '@tanstack/vue-query';\n\n\tconst schema = z.object({\n\t\thello: z.string(),\n\t\tid: z.string(),\n\t});\n\n\ttype DataSchema = z.infer<typeof schema>;\n\n\tconst { data, error, suspense } = useQuery({\n\t\tqueryKey: ['ul', 'info'],\n\t\tqueryFn: async () => {\n\t\t\tconst response = await $fetch(\n\t\t\t\t'https://api.1clicom.ru/expert/?tenders&d',\n\t\t\t\t{\n\t\t\t\t\tmethod: 'POST',\n\t\t\t\t\tbody: {\n\t\t\t\t\t\thello: 'world new',\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t);\n\n\t\t\tconst { success, data } = schema.safeParse(response);\n\n\t\t\tif (!success && !process.dev) {\n\t\t\t\tthrow new Error('Error');\n\t\t\t}\n\t\t\treturn data;\n\t\t},\n\t\tretry: false,\n\t});\n\n\tawait suspense();\n</script>\n\n<template>\n\t<div>\n\t\t<h1 class=\"text-2xl\">Hello world</h1>\n\t\t<div class=\"flex flex-col\">\n\t\t\t<pre>Data - {{ data }}</pre>\n\t\t\t<pre>Error - {{ error }}</pre>\n\t\t</div>\n\t</div>\n</template>\n"],"names":["data","_withAsyncContext"],"mappings":";;;;;;;;;AAIO,UAAA,SAAS,EAAE,OAAO;AAAA,MACvB,OAAO,EAAE,OAAO;AAAA,MAChB,IAAI,EAAE,OAAO;AAAA,IAAA,CACb;AAID,UAAM,EAAE,MAAM,OAAO,SAAA,IAAa,SAAS;AAAA,MAC1C,UAAU,CAAC,MAAM,MAAM;AAAA,MACvB,SAAS,YAAY;AACpB,cAAM,WAAW,MAAM;AAAA,UACtB;AAAA,UACA;AAAA,YACC,QAAQ;AAAA,YACR,MAAM;AAAA,cACL,OAAO;AAAA,YACR;AAAA,UACD;AAAA,QAAA;AAGD,cAAM,EAAE,SAAS,MAAAA,MAAS,IAAA,OAAO,UAAU,QAAQ;AAE/C,YAAA,CAAC,WAAW,MAAc;AACvB,gBAAA,IAAI,MAAM,OAAO;AAAA,QACxB;AACOA,eAAAA;AAAAA,MACR;AAAA,MACA,OAAO;AAAA,IAAA,CACP;AAEK,KAAA,QAAA,SAAA,IAAAC,iBAAA,MAAA,UAAS;;;;;;;;;;;;"}